@startuml
title 1:1 E2EE Call (ML-KEM-1024 + WebRTC DTLS/SRTP + SFrame)

skinparam sequenceMessageAlign center
skinparam ParticipantPadding 18
skinparam BoxPadding 10

actor Alice
participant "Signaling Server\n(untrusted relay)" as Signal
actor Bob
collections "STUN/TURN" as Turn

== Capability & Identity ==
Alice -> Signal : Offer caps { ML-KEM-1024, ML-KEM-768 }
Signal -> Bob : Relay offer
Bob -> Signal : Answer caps { ML-KEM-1024 } (prefer 1024)
Signal -> Alice : Relay answer
note over Alice,Bob
Both sides now know highest common KEM:\n→ ML-KEM-1024 (fallback to 768 if needed)
end note

== PQ Key Distribution over E2EE Signaling ==
Alice -> Signal : E2EE msg: Alice_PK_KEM(1568B) + identity
Signal -> Bob : Relay (opaque)
Bob -> Signal : E2EE msg: Bob_PK_KEM(1568B) + identity
Signal -> Alice : Relay (opaque)

== Encapsulation / Decapsulation ==
Alice -> Alice : ct, ss_A = ML-KEM-1024.encap(Bob_PK_KEM)
Alice -> Signal : E2EE msg: ct   (ciphertext)
Signal -> Bob : Relay ct (opaque)
Bob -> Bob : ss_B = ML-KEM-1024.decap(ct, Bob_SK_KEM)
note over Alice,Bob
ss_A == ss_B  (shared secret from ML-KEM-1024)
end note

== WebRTC Setup (ICE/SDP/DTLS) ==
Alice -> Signal : E2EE signaling: SDP offer + ICE
Signal -> Bob : Relay (opaque)
Bob -> Signal : E2EE signaling: SDP answer + ICE
Signal -> Alice : Relay (opaque)
Alice -> Turn : ICE (if needed)
Bob -> Turn : ICE (if needed)

== Media Key Derivation ==
Alice -> Alice : SRTP/SFrame keys = KDF(ss, context, nonces)
Bob -> Bob : SRTP/SFrame keys = KDF(ss, context, nonces)
note over Alice,Bob
• Use DTLS-SRTP for transport framing\n• Apply Insertable Streams (SFrame) for app-layer E2EE\n  (media opaque to SFU/TURN/servers)
end note

== Media ==
Alice -> Bob : Encrypted media (SFrame-over-SRTP), P2P or via TURN
Alice -> Turn : SRTP packets (opaque)
Turn -> Bob : SRTP packets (opaque)
Bob -> Alice : Encrypted media

== Fallback ==
alt If 1024 not supported by one side
  note over Alice,Bob
  Negotiate ML-KEM-768 (1184B pub, 2400B priv)\nLog downgrade; allow session (compat mode)
  end note
end

@enduml
